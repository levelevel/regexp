#define TEST_DATA(a,b,c) {__LINE__,a,b,c},
    TEST_DATA("abc", "a", 1)
    TEST_DATA("abc", "b", 1)
    TEST_DATA("abc", "c", 1)
    TEST_DATA("abc", "d", 0)
    TEST_DATA("abc", "ab", 1)
    TEST_DATA("abc", "bc", 1)
    TEST_DATA("abc", "ac", 0)
    TEST_DATA("abc", "cd", 0)
    TEST_DATA("abc", "abc", 1)
    TEST_DATA("abc", "", 1)

    TEST_DATA("abc", "^a", 1)
    TEST_DATA("abc", "a$", 0)
    TEST_DATA("abc", "^b", 0)
    TEST_DATA("abc", "b$", 0)
    TEST_DATA("abc", "c$", 1)
    TEST_DATA("abc", "^ab", 1)
    TEST_DATA("abc", "^bc", 0)
    TEST_DATA("abc", "ab$", 0)
    TEST_DATA("abc", "bc$", 1)
    TEST_DATA("abc", "^ab$", 0)
    TEST_DATA("abc", "^bc$", 0)
    TEST_DATA("abc", "^abc$", 1)

    TEST_DATA("abc", "*", 0)
    TEST_DATA("abc", "a*", 1)
    TEST_DATA("abc", "aa*", 1)
    TEST_DATA("abc", "ab*c", 1)
    TEST_DATA("abc", "b*", 1)
    TEST_DATA("abc", "c*", 1)
    TEST_DATA("abc", "d*", 1)
    TEST_DATA("abc", "^a*", 1)
    TEST_DATA("abc", "^b*", 1)
    TEST_DATA("abc", "^c*", 1)
    TEST_DATA("abc", "^d*", 1)
    TEST_DATA("abc", "a*$", 1)
    TEST_DATA("aaabbbccc", "aaaa*", 1)
    TEST_DATA("aaabbbccc", "ab*", 1)

    TEST_DATA("abc", ".", 1)
    TEST_DATA("abc", "..", 1)
    TEST_DATA("abc", "...", 1)
    TEST_DATA("abc", "....", 0)
    TEST_DATA("abc", "^...$", 1)
    TEST_DATA("abc", "a.c", 1)
    TEST_DATA("abc", "^a.c$", 1)
    TEST_DATA("abc", "a..c", 0)

    TEST_DATA("abc  xyz", "abc *xyz", 1)
    TEST_DATA("*", "*", 1)

    TEST_DATA("a*c", "\\*", 1)
    TEST_DATA("a*c", "\\*\\*", 0)
    TEST_DATA("a**c", "\\*\\*", 1)
    TEST_DATA("a**c", "^a\\*\\*c$", 1)
    TEST_DATA("a\\c", "\\\\", 1)
    TEST_DATA("a\\b\\c", "\\\\b\\\\", 1)
    TEST_DATA("a..c", "a\\.\\.c", 1)
    TEST_DATA("a$c", "a\\$", 1)
    TEST_DATA("a$c", "c\\$", 0)
    TEST_DATA("\\abc", "\\a", 1)
    TEST_DATA("^abc", "^a", 0)
    TEST_DATA("a^bc", "\\^b", 1)
    TEST_DATA("abc", "a**", -1)
    TEST_DATA("abc", ".*", 1)
    TEST_DATA("abc", "a.*", 1)
    TEST_DATA("abc", "a.*c", 1)

    TEST_DATA("abc", "[a]", 1)
    TEST_DATA("abc", "a[ab]", 1)
    TEST_DATA("abc", "a[abc]c", 1)
    TEST_DATA("abc", "[^a]", 1)
    TEST_DATA("aaa", "[^a]", 0)
    TEST_DATA("abc", "[^abc]", 0)
    TEST_DATA("]", "[]]", 1)
    TEST_DATA("-", "[-]", 1)
    TEST_DATA("-", "[a-]", 1)
    TEST_DATA("abc", "[a-c]", 1)
    TEST_DATA("abc", "[c-a]", -1)    //Error
    TEST_DATA("abc", "[a-a]", 1)
    TEST_DATA("abc", "[x-z]", 0)
    TEST_DATA("abc", "[0-9]", 0)
    TEST_DATA("123", "[0-9]", 1)
    TEST_DATA("abc/5", "[a-z]/[0-9]", 1)
    TEST_DATA("abc/z5", "[a-z]/[0-9]", 0)

    TEST_DATA("abc", "[b]*", 1)
    TEST_DATA("abc", "[b]*c", 1)
    TEST_DATA("abc", "a[b]*c", 1)
    TEST_DATA("abbc", "[b]*", 1)
    TEST_DATA("abbc", "a[b-c]*[a-b]*c", 1)
